@using TeamWorkApp.Models
@using TaskStatus = TeamWorkApp.Models.TaskStatus
@model IEnumerable<TeamWorkApp.Models.Task>

@{
    ViewBag.Title = "Seznam opravil";

    var newTasks = Model.Where(x => x.TaskStatus.Equals(TaskStatus.New));
    var inProgressTask = Model.Where(x => x.TaskStatus.Equals(TaskStatus.InProgress));
    var completedTasks = Model.Where(x => x.TaskStatus.Equals(TaskStatus.Completed));
}

<a class="btn btn-primary" href="@Url.Action("Create", "Task")">Dodaj opravilo</a>

<div class="row">
    <div class="col-xs-12 col-sm-4">
        <h3>Novo / Nedodeljeno</h3>
        @foreach (var item in newTasks)
        {
            var taskName = $"Task_{item.TaskID}";

            <div class="task-card-wrapper">
                <div class="task-name">
                    <span>@taskName</span>
                    <div class="action-wrapper">
                        <a class="glyphicon glyphicon-new-window" href="@Url.Action("Edit", "Task", new { id = item.TaskID })"></a>                
                        @using (Html.BeginForm("Delete", "Task", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "DeleteTask(this,event)" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("id", item.TaskID)
                            <button class="glyphicon glyphicon-trash tm-submit-button" type="submit"></button>
                        }
                    </div>
                    
                </div>
                
                <div class="task-desc">@item.TaskDescription</div>
                <div class="team-members">
                    @foreach (var x in item.TeamMembers)
                    {
                        <span>@x.Name</span>
                        if (x != item.TeamMembers.LastOrDefault())
                        {
                            <span>|</span>
                        }
                    }
                </div>
            </div>
        }
    </div>
    <div class="col-xs-12 col-sm-4">
        <h3>V teku</h3>
        @foreach (var item in inProgressTask)
        {
            var taskName = $"Task_{item.TaskID}";

            <div class="task-card-wrapper">
                <div class="task-name">
                    <span>@taskName</span>
                    <div class="action-wrapper">
                        <a class="glyphicon glyphicon-new-window" href="@Url.Action("Edit", "Task", new { id = item.TaskID })"></a>                
                        @using (Html.BeginForm("Delete", "Task", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "DeleteTask(this,event)" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("id", item.TaskID)
                            <button class="glyphicon glyphicon-trash tm-submit-button" type="submit"></button>
                        }
                    </div>
                </div>
                
                <div class="task-desc">@item.TaskDescription</div>
                <div class="team-members">
                    @foreach (var x in item.TeamMembers)
                    {
                        <span>@x.Name</span>
                        if (x != item.TeamMembers.LastOrDefault())
                        {
                            <span>|</span>
                        }
                    }
                </div>
            </div>
        }
    </div>
    <div class="col-xs-12 col-sm-4">
        <h3>Zaključeno</h3>
        @foreach (var item in completedTasks)
        {
            var taskName = $"Task_{item.TaskID}";
            <div class="task-card-wrapper">
                <div class="task-name">
                    <span>@taskName</span>
                    <div class="action-wrapper">
                        <a class="glyphicon glyphicon-new-window" href="@Url.Action("Edit", "Task", new { id = item.TaskID })"></a>                
                        @using (Html.BeginForm("Delete", "Task", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "DeleteTask(this,event)" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.Hidden("id", item.TaskID)
                            <button class="glyphicon glyphicon-trash tm-submit-button" type="submit"></button>
                        }
                    </div>
                </div>
                
                <div class="task-desc">@item.TaskDescription</div>
                <div class="team-members">
                    @foreach (var x in item.TeamMembers)
                    {
                        <span>@x.Name</span>
                        if (x != item.TeamMembers.LastOrDefault())
                        {
                            <span>|</span>
                        }
                    }
                </div>
            </div>
        }
    </div>

</div>

<script type="text/javascript">
function DeleteTask(ctl, event)  
{  
    event.preventDefault();
        
    Swal.fire({
      title: 'Ali ste prepričani da želite izbrisati opravilo?',
      text: "",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Da, nadaljuj'
    }).then((result) => {
      if (result.isConfirmed) {
         
        let data = $(event.target).serialize();
        
        $.ajax({
          url: event.target.action,
          dataType: "JSON",
          method: "POST",
          data: data,
          headers: {
              'Accept': 'application/json'
          },
        }).done(function(res) {
            if (res.status)
                location.reload();
        });
      }
    })  
}  
</script>